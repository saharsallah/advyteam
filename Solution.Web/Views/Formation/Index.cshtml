@model IEnumerable<Solution.Data.formation>

@{
    Layout = "~/Views/Shared/_Layouttt.cshtml";
}

<h2>Index</h2>
<script>
      function archiveFunction(id) {
            event.preventDefault(); // prevent form submit
            swal({
                title: "Êtes-vous sûr?",
                text: "Vous ne pourrez pas restaurer les données de la formation.",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Oui, Supprimer!",
                cancelButtonText: "Non, Annuler!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        window.location = '/Formation/Delete?id=' + id;
                        // submitting the form when user press yes
                    } else {
                        swal("Annulé", "La formation n'as pas été supprimé", "error");
                    }
                });
        }
</script>
<p>
    @Html.ActionLink("Ajouter Formation", "Create")
</p>

<div class="col-md-3">
    <form action="#" method="get">
        <div class="input-group">
            <!-- USE TWITTER TYPEAHEAD JSON WITH API TO SEARCH -->
            <input class="form-control" id="system-search" name="q" placeholder="Search for" required>
            <span class="input-group-btn">
                <button type="submit" class="btn btn-default"><i class="glyphicon glyphicon-search"></i></button>
            </span>
        </div>
    </form>
</div>
<div class="col-md-9">
    <table class="table table-list-search">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.dateDebut)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.dateFin)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.nom)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.refnamepar)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.type)
                </th>
    
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @if (item.dateDebut != null)
                        {@item.dateDebut.Value.ToString("dd/MM/yyyy")}
                    </td>
                    <td>
                        @if (item.dateFin != null)
                        { @item.dateFin.Value.ToString("dd/MM/yyyy")}
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.nom)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.refnamepar)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.type)
                    </td>

                    <td>
                        <a onclick = "archiveFunction(@item.id);" href="#">Delete</a>
                        @Html.ActionLink("Edit", "Edit", new { id = item.id })

                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>
<script>
    $(document).ready(function () {
        var activeSystemClass = $('.list-group-item.active');

        //something is entered in search form
        $('#system-search').keyup(function () {
            var that = this;
            // affect all table rows on in systems table
            var tableBody = $('.table-list-search tbody');
            var tableRowsClass = $('.table-list-search tbody tr');
            $('.search-sf').remove();
            tableRowsClass.each(function (i, val) {

                //Lower text for case insensitive
                var rowText = $(val).text().toLowerCase();
                var inputText = $(that).val().toLowerCase();
                if (inputText != '') {
                    $('.search-query-sf').remove();
                    tableBody.prepend('<tr class="search-query-sf"><td colspan="6"><strong>Searching for: "'
                        + $(that).val()
                        + '"</strong></td></tr>');
                }
                else {
                    $('.search-query-sf').remove();
                }

                if (rowText.indexOf(inputText) == -1) {
                    //hide rows
                    tableRowsClass.eq(i).hide();

                }
                else {
                    $('.search-sf').remove();
                    tableRowsClass.eq(i).show();
                }
            });
            //all tr elements are hidden
            if (tableRowsClass.children(':visible').length == 0) {
                tableBody.append('<tr class="search-sf"><td class="text-muted" colspan="6">No entries found.</td></tr>');
            }
        });
    });


</script>

