@model Solution.Data.formation

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layouttt.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>formation</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.dateDebut, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.dateDebut, new { @type = "date", @class = "form-control datepicker", @id= "dateDebut" })
            @Html.ValidationMessageFor(model => model.dateDebut, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dateFin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.dateFin, new { @type = "date", @class = "form-control datepicker", @id = "dateFin" })
            @Html.ValidationMessageFor(model => model.dateFin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.refnamepar, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.refnamepar, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.refnamepar, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $(document).ready(function () {
        $('#dateDebut').on('change', function () {
            $("#dateFin").val(this.value);
        });

        $('#dateFin').on('change', function () {
            var date = new Date($('#dateDebut').val());
           // alert(this.value);
            if (new Date(this.value) < date) {
                $("#dateFin").val($('#dateDebut').val());
                swal({
                    title: "Date fin doit être suppérieure à la date début?",
                    type: "error",
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "OK",
                });
            }
        });

    });
</script>
